 #pragma once
#include "ZoneWriterAbstract.h"
#include "FieldData.h"
#include "NodeMap.h"
#include "SZLFEZoneHeaderWriter.h"
namespace tecplot { namespace ___3931 { class ___1337; class ___1348; class ItemSetIterator; class SZLFEZoneWriter : public ___4707 { public: SZLFEZoneWriter( ItemSetIterator&                           varIter, ___4634                                zone, ___4634                                ___341, std::vector<___372> const&              ___4562, ___372                                  ___4497, ___37&                                ___36, boost::shared_ptr<___1348 const> const& zoneInfo); virtual ~SZLFEZoneWriter(); static uint64_t fieldDataSubzoneHeaderFileSize(bool ___2000); static uint64_t cszConnectivityHeaderFileSize(bool ___2000); protected: SZLFEZoneHeaderWriter m_headerWriter; boost::shared_ptr<___1348 const> m_feZoneInfo; void setZoneNumberLabel(std::string const& zoneNumberLabel); private: std::string m_zoneNumberLabel; ___1390 ___2671; ___1390 m_cszConnectivityFileLocs; ___1390 m_nszConnectivityFileLocs; UInt16Array m_numRefNodeSubzones; UInt16Array m_numRefCellSubzones; UInt8Array m_cszIncludesPartitionOffsetsBitArray; UInt8Array m_nszIncludesPartitionOffsetsBitArray; virtual uint64_t zoneConnectivityFileSize(bool ___2000); virtual uint64_t zoneDataFileSize(bool ___2000); virtual uint64_t zoneHeaderFileSize(bool ___2000); virtual ___372 writeZoneConnectivity(FileWriterInterface& szpltFile); virtual ___372 writeZoneData(FileWriterInterface& szpltFile); virtual ___372 writeZoneHeader(FileWriterInterface& szpltFile); ___372 calculateVarSubzoneMinMaxes( ___4350   ___4334, ___2479& nszDataMinMax, ___2479& cszDataMinMax); ___372 ___4510( FileWriterInterface&         file, ValueLocation_e              ___4324, ___4350                   ___4334, ___2088::SubzoneOffset_t ___3878); template <typename T, bool isBitArray> ___372 ___4494( FileWriterInterface&         szpltFile, ___1350 const&             ___1349, ___2088::SubzoneOffset_t ___467); template <typename T, bool isBitArray> ___372 ___4529( FileWriterInterface&         szpltFile, ___1350 const&             ___1349, ___2088::SubzoneOffset_t ___2732); template <typename T, bool isBitArray> uint64_t cellSubzoneFieldDataFileSize(bool ___2000, ___2088::SubzoneOffset_t ___467) const; template <typename T, bool isBitArray> uint64_t nodeSubzoneFieldDataFileSize(bool ___2000, ___2088::SubzoneOffset_t ___2732) const; template <typename T, bool isBitArray> uint64_t subzoneFieldDataFileSize(bool ___2000, ___2088::SubzoneOffset_t ___3878, ValueLocation_e ___4324) const; template <typename T, bool isBitArray> ___372 writeVariable( FileWriterInterface&     szpltFile, ___4350 const         ___4334, ___2479 const&       nszDataMinMax, ___2479 const&       cszDataMinMax); template <typename T, bool isBitArray> uint64_t variableFileSize(bool ___2000, ValueLocation_e ___4324);
___372 ___4499( FileWriterInterface&         file, ___2088::SubzoneOffset_t ___467); ___372 ___4498( FileWriterInterface&           file, ___1337 const& compressor, bool                           outputPartitionIndices); uint64_t cszConnectivityDataFileSize( bool ___2000, size_t totalNumCellCorners, size_t numRefNszs, ___2088::___2978 numRefPartitions, bool outputPartitionIndices); ___372 writeCszConnectivity( FileWriterInterface&      szpltFile, ___2727                ___2721, PartitionSubzoneSetArray& nszRefCszSets); uint64_t cszConnectivityFileSize(bool ___2000, PartitionSubzoneSetArray& nszRefPtnCszSets); ___372 ___4535( FileWriterInterface&         file, ___2088::SubzoneOffset_t ___2732); uint64_t nszConnectivityHeaderFileSize(bool ___2000); ___372 ___4533( FileWriterInterface&      file, PartitionSubzoneSetArray& nszRefPtnCszSets); uint64_t nszConnectivityFileSize(bool ___2000, PartitionSubzoneSetArray& nszRefPtnCszSets); PartitionSubzoneSet getRefPtnCszs(___2727 ___2721, ___2088::SubzoneOffset_t ___2732); }; }}
