#include "FieldData_s.h"
namespace tecplot { namespace tecioszl { double const ___1360::GHOST_VALUE = std::numeric_limits<double>::quiet_NaN(); ___1360::___1360() : ___2457(FieldDataType_Float) , ___2666(0) , ___2667(___4328) , m_minValue(std::numeric_limits<double>::max()) , m_maxValue(-std::numeric_limits<double>::max()) { } ___1360::~___1360() { } void ___1360::___1757(double& minVal, double& maxVal) const { minVal = m_minValue; maxVal = m_maxValue; if (maxVal < minVal) { minVal = 0.0; maxVal = 0.0; } } void ___1360::___3497(double minVal, double maxVal) { m_minValue = minVal; m_maxValue = maxVal; } ___1360::Ptr ___1360::makePtr(tecplot::___3931::___1397& inputFile, bool readASCII) { FieldDataType_e ___1361; READ_ENUM(___1361, FieldDataType_e, inputFile, readASCII); Ptr ___1349 = tecplot::tecioszl::TypedFieldDataFactory().make(___1361); ___1349->readFromFile(inputFile, readASCII); return ___1349; } void ___1360::updateMinMax(double ___4312) { if (___4312 == ___4312) { m_minValue = std::min(m_minValue, ___4312); m_maxValue = std::max(m_maxValue, ___4312); } } }}
