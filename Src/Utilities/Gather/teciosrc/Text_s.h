 #pragma once
#include "SzlFileLoader.h"
#include "fileio.h"
namespace tecplot { namespace tecioszl { struct Text : public tecplot::___3931::Text { public: static Text invalidText() { return Text( 0.0, 0.0, 0.0, ___364, ___4453, 0.1, 20.0, ___4073, ___4048, 0.0, ___496, ___364, 14.0, 1.0, "", ___661, ___3444, ___4269, "", "Helvetica", ___1303, ___1303, 1, ___1303 ); } Text( double ___4572, double ___4589, double ___4711, ___514 ___4057, ___514 ___4059, double ___4069, double ___4071, TextBox_e ___4076, TextAnchor_e ___4041, double ___4054, Clipping_e ___4077, ___514 ___4078, double ___4101, double ___4105, std::string ___4107, CoordSys_e ___4113, Scope_e ___4117, Units_e ___4122, std::string ___4124, std::string ___4127, ___372 ___4130, ___372 ___4132, ___1170 ___4136, ___372 ___4103) : tecplot::___3931::Text(___4572, ___4589, ___4711, ___4057, ___4059, ___4069, ___4071, ___4076, ___4041, ___4054, ___4077, ___4078, ___4101, ___4105, ___4107, ___4113, ___4117, ___4122, ___4124, ___4127, ___4130, ___4132, ___4136, ___4103) {} bool ___2065() { return VALID_ENUM(___2637, CoordSys_e); } void writeToFile(___3931::FileWriterInterface& outputFile, bool ___4478) const { writeScalar(outputFile, ___2626, ___4478); writeScalar(outputFile, ___2627, ___4478); writeScalar(outputFile, ___2628, ___4478); writeScalar(outputFile, ___2629, ___4478); writeScalar(outputFile, (uint32_t)___2630, ___4478); writeScalar(outputFile, (uint32_t)___2623, ___4478); writeScalar(outputFile, ___2624[0], ___4478); writeScalar(outputFile, ___2624[1], ___4478); writeScalar(outputFile, ___2624[2], ___4478); writeScalar(outputFile, ___2625, ___4478); writeScalar(outputFile, (uint32_t)___2631, ___4478); writeScalar(outputFile, ___2632, ___4478); writeScalar(outputFile, ___2633, ___4478); writeScalar(outputFile, ___2635, ___4478); ___4542(outputFile, ___2636, ___4478); writeScalar(outputFile, (uint32_t)___2637, ___4478); writeScalar(outputFile, (uint32_t)___2639, ___4478); writeScalar(outputFile, (uint32_t)___2640, ___4478); ___4542(outputFile, ___2641, ___4478); ___4542(outputFile, ___2642, ___4478); writeScalar(outputFile, ___2643, ___4478); writeScalar(outputFile, ___2644, ___4478); writeScalar(outputFile, ___2645, ___4478); writeScalar(outputFile, ___2634, ___4478); } uint64_t sizeInFile(bool ___4478) const { return scalarSizeInFile(___2626, ___4478) + scalarSizeInFile(___2627, ___4478) +
scalarSizeInFile(___2628, ___4478) + scalarSizeInFile(___2629, ___4478) + scalarSizeInFile((uint32_t)___2630, ___4478) + scalarSizeInFile((uint32_t)___2623, ___4478) + scalarSizeInFile(___2624[0], ___4478) + scalarSizeInFile(___2624[1], ___4478) + scalarSizeInFile(___2624[2], ___4478) + scalarSizeInFile(___2625, ___4478) + scalarSizeInFile((uint32_t)___2631, ___4478) + scalarSizeInFile(___2632, ___4478) + scalarSizeInFile(___2633, ___4478) + scalarSizeInFile(___2635, ___4478) + stringSizeInFile(___2636, ___4478) + scalarSizeInFile((uint32_t)___2637, ___4478) + scalarSizeInFile((uint32_t)___2639, ___4478) + scalarSizeInFile((uint32_t)___2640, ___4478) + stringSizeInFile(___2641, ___4478) + stringSizeInFile(___2642, ___4478) + scalarSizeInFile(___2643, ___4478) + scalarSizeInFile(___2644, ___4478) + scalarSizeInFile(___2645, ___4478) + scalarSizeInFile(___2634, ___4478); } Text(___3931::___1397& inputFile, bool readASCII) { readScalar(inputFile, ___2626, readASCII); readScalar(inputFile, ___2627, readASCII); readScalar(inputFile, ___2628, readASCII); readScalar(inputFile, ___2629, readASCII); READ_ENUM(___2630, TextBox_e, inputFile, readASCII); READ_ENUM(___2623, TextAnchor_e, inputFile, readASCII); readScalar(inputFile, ___2624[0], readASCII); readScalar(inputFile, ___2624[1], readASCII); readScalar(inputFile, ___2624[2], readASCII); readScalar(inputFile, ___2625, readASCII); READ_ENUM(___2631, Clipping_e, inputFile, readASCII); readScalar(inputFile, ___2632, readASCII); readScalar(inputFile, ___2633, readASCII); readScalar(inputFile, ___2635, readASCII); readString(inputFile, ___2636, readASCII); READ_ENUM(___2637, CoordSys_e, inputFile, readASCII); READ_ENUM(___2639, Scope_e, inputFile, readASCII); READ_ENUM(___2640, Units_e, inputFile, readASCII); readString(inputFile, ___2641, readASCII); readString(inputFile, ___2642, readASCII); readScalar(inputFile, ___2643, readASCII); readScalar(inputFile, ___2644, readASCII); readScalar(inputFile, ___2645, readASCII); readScalar(inputFile, ___2634, readASCII); } }; }}
