 #pragma once
#include "AltTecUtil.h"
#include "basicTypes.h"
#include "IJK.h"
namespace tecplot { namespace ___3931 { inline bool supportedOrderedVolumeZoneType(ZoneType_e ___4690, tecplot::___3931::___1842 const& ___4630) { return (___4690 == ___4702 && ___4630.i() > 1 && ___4630.___2103() > 1 && ___4630.___2132() > 1); } inline bool ___3892(ZoneType_e ___4690) { return ___4690==___4699 || ___4690==___4693; } inline bool ___3893(ZoneType_e ___4690, ___1842 const& ___4630) { return supportedOrderedVolumeZoneType(___4690, ___4630) || ___3892(___4690); } inline bool supportedZoneType(ZoneType_e ___4690) { return ___4690 == ___4702 || ___4690 == ___4700 || ___4690 == ___4698 || ___4690 == ___4699 || ___4690 == ___4693 || ___4690 == ___4694; } inline bool linearZoneType(ZoneType_e ___4690, ___1842 const& ___4630) { bool ___3356 = false; if (___4690 == ___4694) { ___3356 = true; } else if (___4690 == ___4702) { int ___1087 = 0; if (___4630.i() > 1) ++___1087; if (___4630.___2103() > 1) ++___1087; if (___4630.___2132() > 1) ++___1087; ___3356 = ___1087 <= 1; } return ___3356; } inline bool ___3156(ZoneType_e ___4690) { return ___4690 == ___4696 || ___4690 == ___4697; } inline ___372 ___4639(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); ZoneType_e ___4690 = ___36.___4618(zone+1); return ___4690==___4702; } inline ___372 ___4643(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); ZoneType_e ___4690 = ___36.___4618(zone+1); return ___4690==___4699; } inline ___372 ___4635(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); ZoneType_e ___4690 = ___36.___4618(zone+1); return ___4690==___4693; } inline ___372 ___4637(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); ZoneType_e ___4690 = ___36.___4618(zone+1); return ___4690==___4699 || ___4690==___4693; } inline ___372 ___4644(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); if (___4637(___36, zone)) { return ___4224; } else if (___4639(___36, zone)) { ___1842 ___1841; ___36.___4613(zone + 1, ___1841); if (___1841.i() > 1 && ___1841.___2103() > 1 && ___1841.___2132() > 1) return ___4224; } return ___1303; } inline ___372 ___4641(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); return (___36.___4618(zone + 1) == ___4696 || ___36.___4618(zone + 1) == ___4697); } inline ___372 zoneIsPartitioned(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); return ___36.zoneIsPartitioned(zone + 1); } inline ___372 ___4642(___37& ___36, ___4634 zone) { REQUIRE(zone >= 0); return ___3892(___36.___4618(zone + 1)); } inline ___372 ___4640(___37& ___36, ___4634 zone) {
REQUIRE(zone >= 0); return ___4644(___36, zone) && ___4639(___36, zone); } }}
