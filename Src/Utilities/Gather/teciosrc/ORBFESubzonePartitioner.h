 #pragma once
#include "FESubzonePartitionerInterface.h"
#include "OrthogonalBisection.h"
namespace tecplot { namespace ___3931 { class OrbFESubzonePartitioner : public virtual FESubzonePartitionerInterface { UNCOPYABLE_CLASS(OrbFESubzonePartitioner); private: ___4634 const               ___2675; ___2088::ItemOffset_t const m_fixedSubzoneSize; OrthogonalBisection             m_cellOrb; OrthogonalBisection             m_nodeOrb; ItemAddressArray                m_szCoordsOfOrginalZoneCells; ItemAddressArray                m_szCoordsOfOrginalZoneNodes; ___372 partitionIntoSubzones(___37& ___36); public: OrbFESubzonePartitioner( ___37&               ___36, ___4634               zone, ___2088::ItemOffset_t fixedSubzoneSize); virtual ~OrbFESubzonePartitioner(); virtual ___463                  numCellsInZone() const; virtual ___2088::SubzoneOffset_t ___2781() const; virtual ___2088::ItemOffset_t    ___2780(___2088::SubzoneOffset_t ___467) const; virtual ___463                  ___4606(___2088 ___449) const; virtual ___2088                  szCoordinateAtZoneCell(___463 zoneCell) const; virtual ___2716                  numNodesInZone() const; virtual ___2088::SubzoneOffset_t ___2821() const; virtual ___2088::ItemOffset_t    ___2820(___2088::SubzoneOffset_t ___2732) const; virtual ___2716                  ___4655(___2088 nodeAddress) const; virtual ___2088                  ___3922(___2716 ___4654) const; virtual void                         setNodeSubzoneCoordinate(___2716 ___4654, ___2088 ___2757); }; }}
