 #pragma once
#include "ThirdPartyHeadersBegin.h"
#  include <boost/shared_ptr.hpp>
#include "ThirdPartyHeadersEnd.h"
#include "AltTecUtil.h"
namespace tecplot { namespace ___3931 { typedef boost::shared_ptr<class ___2722> ___2727; class ___2722 { public: ___2722() : ___2495(0) , m_rawNodeMapPtr32(0) , m_rawNodeMapPtr64(0) , ___2390(0) , ___2498(0) {} ___2722(___37* tecUtil, ___1170 zone, bool writable = false); bool ___2065() const { return ((((m_rawNodeMapPtr32 != NULL) && (m_rawNodeMapPtr64 == NULL) && (___2495 == NULL)) || ((m_rawNodeMapPtr32 == NULL) && (m_rawNodeMapPtr64 != NULL) && (___2495 == NULL)) || ((m_rawNodeMapPtr32 == NULL) && (m_rawNodeMapPtr64 == NULL) && (___2495 != NULL))) && m_tecUtil != NULL && ___2390 > 0 && 2 <= ___2498 && ___2498 <= 8); } ___2716 ___1761(___2225 ___447, int32_t ___679) const { REQUIRE(0 < ___447 && ___447 <= ___2390); REQUIRE(0 < ___679 && ___679 <= ___2498); if (m_rawNodeMapPtr32 != NULL) return m_rawNodeMapPtr32[(___447 - 1) * ___2498 + ___679 - 1] + 1; else if (m_rawNodeMapPtr64 != NULL) return m_rawNodeMapPtr64[(___447 - 1) * ___2498 + ___679 - 1] + 1; else return m_tecUtil->___863(___2495, ___447, static_cast<___680>(___679)); } ___463 ___1764() const { return ___2390; } int32_t ___1762() const { return ___2498; } void setNode(___463 ___447, int32_t ___679, ___2716 ___2707) { if (m_rawNodeMapPtr32 != NULL) m_rawNodeMapPtr32[(___447 - 1) * ___2498 + ___679 - 1] = static_cast<int32_t>(___2707 - 1); else if (m_rawNodeMapPtr64 != NULL) m_rawNodeMapPtr64[(___447 - 1) * ___2498 + ___679 - 1] = ___2707 - 1; else m_tecUtil->___868(___2495, ___447, static_cast<___680>(___679), ___2707); } private: ___37* m_tecUtil; ___2725  ___2495; int32_t*    m_rawNodeMapPtr32; int64_t*    m_rawNodeMapPtr64; ___463 ___2390; int32_t     ___2498; }; }}
